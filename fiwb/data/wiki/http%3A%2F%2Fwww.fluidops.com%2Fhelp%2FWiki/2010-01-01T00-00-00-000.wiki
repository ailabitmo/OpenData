== Using the Semantic Wiki ==
The Semantic Wiki concept extends classical wiki functionality by novel features to create semantic annotations and semantic links between resources. In the following, we shortly describe the main features of the Semantic Wiki, including both classical Wiki features as well as the semantic add-ons. Please note that this discussion is not intended to provide a full reference to wiki features, but rather explains the syntax and features by example. For a complete reference of wiki syntax and features we refer the user to the Media Wiki formatting help page at [http://www.mediawiki.org/wiki/Help:Formatting].

=== Wiki Markup Language ===
The basic idea of the wiki language is to provide an easy-to-learn textual markup language that can be used to collaboratively create formatted and structured text. The text is entered into a simple text editor (in our case, the <img src="../images/navigation/tab_edit.png" /> tab of the Wiki view), then automatically translated by the system according to the markup language semantics, and finally displayed as formatted HTML in the <img src="../images/navigation/tab_view.png" /> tab of the Wiki. The following markup


<pre>
'''Wiki Syntax by Example'''

''Bulleted List:''
* Topic A
** Subtopic of A
** Subtopic of A
* Topic B
** Subtopic of B

''Numbered List:''
# Topic A
## Subtopic of A
## Subtopic of A
# Topic B
## Subtopic of B
</pre>

generates the following output:

'''Wiki Syntax by Example'''

''Bulleted List:''
* Topic A
** Subtopic of A
** Subtopic of A
* Topic B
** Subtopic of B

''Numbered List:''
# Topic A
## Subtopic of A
## Subtopic of A
# Topic B
## Subtopic of B
<br/><br/>

As can be seen, there are different syntactic markup constructs, e.g. to create

* Headings
Headings can be created by enclosing the headline into '=' signs. Smaller headings are generated by increasing the number of enclosing equality signs.
* Bold text
Bold text can be created by enclosing it into triple back-ticks (cf. the example above).
* Italic text
Italic text can be created by enclosing it into double back-ticks (cf. the example above).
* Bullet Lists
Writing bullet lists is very intuitive: the special symbol '*' is interpreted as a bullet. When using '**'' in a line subsequent to an existing bullet, it will be automatically interpreted as a sub-bullet of the previous one.
* Numbered Lists
Similarly to bullet lists, the symbol '#' can be used in place of the '*' symbol to create numbered lists.

Again, the listing above describes only a small fraction of the wiki markup language and serves as an example demonstrating the basic wiki concept only.

'''Important Note:''' ''When editing a wikipage it is best to have only one instance of the Information Workbench open within the browser.  Problems while editing can be encountered if the Information Workbench is open in more than one tab of the '''same''' browser'' due to session handling of the browser.

=== Links and Semantic Links ===
A central feature has considerably contributed to the success of wikis is the possibility to interlink information. While classical wikis are restricted to support simple (internal and external) HTML links, the Semantic Wiki that is integrated in the Information Workbench also allows users to annotate resources and to create semantically meaningful associations between entities, so-called semantic links. As a benefit compared to classical links, these semantic annotations and associations are stored directly in the database, together with the remaining structured information, and are later considered when answering structured queries over the data.


==== Classical Links ====
Syntactically, standard (non-semantic) links are created by enclosing the name of the page we want to link to into squared brackets. If, for instance, we want to link to the page of the documentation, we may use the wiki Edit view and enter some text like

<pre>More information can be found at the [[Help:Help]] page.</pre>

This text is then translated into the following HTML code: ''More information can be found at the [[Help:Help]] page.''

It is also possible to change the text that is displayed, by separating it with a ''|'' symbol:

<pre>More information can be found at the [[Help:Help|Information Workbench Help Page]].</pre>

The latter variant of the link yields the following HTML code (which links to exactly the same location as in the previous example): ''More information can be found at the [[Help:Help|Information Workbench Help Page]].''

A comprehensive description of other link types (like page-internal or wiki-external links) is beyond the scope of this manual, but can be found on the Media Wiki links help page at [http://www.mediawiki.org/wiki/Help:Links].


==== Semantic Links ====
In contrast to classical HTML links, semantic links differ in that they carry a label that identifies the type of link. To give some examples, semantic links may be used to type resources or to add missing information (like connections between hardware resources that are not detected by the data providers). Fitting in the underlying RDF data model, the idea (and also major benefit) of semantic wikis is that such semantic links can be integrated into the database, so that the information immediately becomes accessible and queryable.

Creating a semantic link is simple. All that needs to be known is the name of the attribute and the value we want to link to. This value could either be a string literal (e.g., when associating a human-readable comment to some resource or its price), or another resource (whenever the property captures connections between resources). As an example, let us assume we want to create a semantic link that links to associated help topics, e.g. we want to semantically interlink this help page with description of the navigation views, which also contains a top-level description of the Wiki. Further let us assume, the property we want to use for such a link is called ''relatedTo''. Then the semantic link can be created as follows:

<pre>This Wiki page is related to Wiki page [[relatedTo::Help:Views]].</pre>

This text translats into the following HTML: ''This Wiki page is related to Wiki page [[Help:Views]].'' 

The interesting thing here is that, when saving this Wiki page, the semantic link will be stored in the database. In particual, when changing from the Wiki view to the structured data view (the second button at the left), you can observe that there is now an entry in the table displaying the information that this page is related to page [[Help:Views]]. This makes it possible to query this data later on, e.g. to extract all pairs of help pages that are related to each other.

As an example for an property that associates a literal value to a resource let us add a description for this help page. To this end, we use property ''comment''; the only difference here is that we use ':=' instead of '::' as a separator inside the semantic link. The text

<pre>[[comment:=This Wiki page describes the usage of the Semantic Wiki.]]</pre>

maps to ''[[comment:=This Wiki page describes the usage of the Semantic Wiki.]]''. Again, when saving the page the semantic link will appear in the structured data view, i.e. is persisted in the local data store.

While demonstrated in the context of this help page system, semantic links can be applied to all types of resources. To give only one example, assume we have Wiki pages describing persons. Then we could have a property ''knows'' that can be used to express that two persons know each other, or properties ''firstname'', ''lastname'', and ''age'' to define persons. 

=== Other Wiki Features ===

==== Revision Management ====
The Wiki automatically stores previous versions and provides a simple yet effective revision management system. When clicking on the <img src="../images/navigation/tab_revisions.png" /> tab in the Wiki view, a survey over all previous revisions is shown, including information about the persons that created the revision, the date when the revisions were created, as well as the size of the revision (number of characters of the wiki page). The comment column displays additional user comments that may be entered when saving a revision, which may be useful to distinguish previous version.

<img src="../images/help/revisions.png" />

Using the revision management system, it is also possible to compare two revisions. To do so, select the two revisions that you want to compare from the revision list (by clicking the two select boxes in front of the revisions) and press the '''Show Difference''' button. The two versions of the wiki page will be displayed side by side below the revision table. One can restore an old version by clicking the '''Restore Revision''' button at the corresponding revision row. The link icon at every revision row shows the corresponding revision in wiki view. 

There are two options for deleting the page revisions. You can either select the revisions you want to delete and press the '''Delete selected revisions''' button or you can delete revisions older than a certain date by clicking the '''Delete revisions by date''' button. The button will trigger a pop-up window that will allow you picking a date and defining if the bootstrap revisions should also be deleted or not.

To manage all wiki pages and their revisions use [[Help:WikiManagement | Wiki Management]].

==== Predefined Template Variables ====
If a resource has semantic information associated, then this information can be accessed using so-called template variables. As an example, assume we want to display the ''comment'' associated to a page (which we added in the form of a semantic link above). The following markup (where we added some additional whitespace to avoid replacing the variables) implements this task:

<pre>The comment associated to this page is: $ this.comment $.</pre>

This results in the following HTML markup: ''The comment associated to this page is: $this.comment$.''

In a similar fashion, we can query incoming semantic links. For instance, if there is another page that is ''relatedTo'' the current page, we could display this information by typing

<pre>Page $ relatedTo.this $ is related to this page.</pre>

Given that there is currently no page that is marked as ''relatedTo'' this page, the outcome of this will be:<br>

Page $relatedTo.this$ is related to this page, stating that there is no such page.<br/>

===== Value Resolvers =====

You can influence the way the values are rendered in the wiki page using a special mechanism called [[Help:ValueResolvers | Value Resolvers]]. E.g. the extracted value will be visualized as a thumbnail (provided the value is a valid image URL) with the help of the following expression:

<pre>$ this.myImage[THUMBNAIL] $</pre>

==== Wiki Template Pages ====
Another useful feature is the possibility to create template pages that are automatically instantiated for resources of some fixed type.
In the following we describe how to create a template page with an example.
We will create a template for a the type Employee, representing an employee.
For our example the wiki page employees should display name, hours contracted, and salary, assuming that resources of type Employee have corresponding attributes associated.

1. The first step is to create the template page.  Templates in the
Information Workbench are prefixed by "Template:", i.e. templates reside
in the Template namespace.  To create the template resource for employees
open the page <pre>http://localhost:8888/resource/Template:Employee</pre>.

2. Switch to the wiki edit mode, where the content of the template is entered.
As described earlier you may use the template variable <tt>this</tt> as a replacement for current instance.
A template for employee, displaying name, contract hours and salary could look as follows:

<source>
'''$ this.name $'''

Contracted hours: $ this.contract $
Salary: $ this.salary $
</source>

3. This template will be instantiated automatically when entering the
page of a new resource of type Employee.

Note that changes made on the template page are propagated to individual
resources, as long as a user has not modified the resource.  Once a resource has been modified by a user, new
template versions will not be substituted, this is to avoid overwriting
the wiki content that has been created.

==== Automated Content Retrieval ====
Starting with a empty installation of the Information Workbench, there are ways to automatically retrieve wiki content for several entities. Your installation includes a mechanism to retrieve up-to-date full wikipedia articles for every dbpedia entity. You just have to perform two simple steps to test this feature:

* Go to [[Admin:Namespaces]] and create a new namespace, e.g. dbpedia_resource, pointing to http://dbpedia.org/resource/ .
* Make sure that wikibot automatic content retrieval is enabled. This is either the case if the parameter <b>useWikiBot</b> is not set in the config.prop or <b>useWikiBot=true</b>.
* Go to any wikipage of an existing DBpedia entity, e.g. [serveraddress]/resource/dbpedia_resource:Usain_Bolt, where you substitute <b>dbpedia_resource:</b> by the namespace you created in the first step. 

The current content of Usain Bolt's wikipedia article will be retrieved, displayed and stored in your Information Workbench installation.

The wikibot mechanism is highly configurable. It can connect to any MediaWiki installation. 
The default settings support the retrieval of wikipedia pages for dbpedia entities, to change this or add another MediaWiki for other entities, 
you have to extend the wikibot configuration in the file <b>fiwb/config/wikibot.prop</b>, which contains a mapping of RDF-namespaces to accessible MediaWiki servers. 
For every wikipage describing an entity with a URI from such a namespace, the Information Workbench will try to retrieve a the associated content for this entity from the MediaWiki specified in this configuration file.

==== Embedding Images ====

===== Media Wiki Syntax =====
If you want to embed custom images into your pages you can use the general  [http://www.mediawiki.org/wiki/Help:Images media wiki syntax]. This would be probably the best way to display images that you have uploaded using the [[Help:Upload | File Upload UI]]. E.g. if the name of your uploaded image is ''picture.png'' you can embed this file as an image (you can use the image symbol from the editor menu for assistance) like this:
<source>
[[File:picture.png]]
</source>

===== Value Resolvers in Template Pages =====
You can also use a [[Help:ValueResolvers | value resolver]] for displaying images on a wiki page. This is especially useful for wiki template pages. For example, if the current resource has an image URL attached with a property '''foaf:img''' the image will be displayed after saving the page with a piece of code like this: 
<source>
$ this.foaf:img[IMAGE] $
</source>
To make this source code work please remove additional white spaces between the $ signs and the expression. You will find more information about value resolvers [[Help:ValueResolvers | here]].

==== Using the #REDIRECT directive ====

The #REDIRECT directive can be used to redirect the reader's browser automatically to a specified target page. A redirect is created by the text

<source>
#REDIRECT [[name of the target page]]

Example:
#REDIRECT [[Help:Start]]
</source>

Once embedded into a wiki page (or within an included template) the redirect is performed automatically. See [http://meta.wikimedia.org/wiki/Help:Redirect here] for details.
